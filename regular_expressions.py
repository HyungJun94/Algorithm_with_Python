# -*- coding: utf-8 -*-
"""Regular_expressions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xwe0tdXqXBouB8BEb93f_l436O-PA3JN

## 01
"""

## meta strings
# '$()*+.?[\^{

## Semi-meta strings
# ]-)

# 're' package method

import re 

## re.match() : check if the string startswith with certain pattern   
print(re.match('a', 'a'))
print(re.match('a', 'bba'))
print(re.match('a', 'abb'))
print(re.match('a', 'baa'))

# similar to 'startswith'
obj = 'aab'
obj.startswith('a')

## re.search() : check if the string has certain pattern  

print(re.search('a','abb'))
print(re.search('a','bab'))
print(re.search('a','bba'))

## re.findall() : find all the matching pattern in the string
# return a list

print(re.findall('a','aaa'))
print(re.findall('a','aba'))
print(re.findall('a','abb'))
print(re.findall('a','bbb'))

## re.finditer() : similar to re.findall but doesn't return a list

objs = re.finditer('a','aba')

for obj in objs:
  print(obj)

## re.fullmatch() : check if the string completly matches cetain pettern

print(re.fullmatch('aaa','aaa'))
print(re.fullmatch('aaa','aba'))

## methods for re.Match object

obj = re.search('hello', 'When you meet someone, you say "hello".')
print(obj)

print(obj.group()) # returns matched string
print(obj.span()) # returns the location of matched string  
print(obj.start()) 
print(obj.end())

"""## 02"""

